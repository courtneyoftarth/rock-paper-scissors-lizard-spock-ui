{"version":3,"sources":["images/rock.png","images/paper.png","images/scissors.jpg","images/lizard.jpg","images/spock.png","context/UrlContext.js","context/PlayContext.js","context/MovesContext.js","component/Credits.js","component/Score.js","component/PlayArea/MovePicker.js","component/PlayArea/index.js","component/UrlPicker.js","component/Page.js","component/App.js","serviceWorker.js","index.js"],"names":["module","exports","UrlContext","createContext","UrlContextProvider","children","useState","url","value","setUrl","Provider","PlayContext","computerMove","onMoveSelected","playerMove","PlayContextProvider","setComputerMove","setPlayerMove","results","setResults","useContext","id","a","async","axios","post","player","headers","response","data","computer","result","push","length","slice","MovesContext","MovesContextProvider","moves","setMoves","useEffect","get","Credits","href","ScoreWrapper","styled","div","EmphasizedText","em","Score","wins","filter","ties","losses","mostRecentResult","MoveButton","img","props","isSelected","isClickable","urls","lizard","paper","rock","scissors","spock","MovePicker","onSelect","selected","map","name","src","alt","key","onClick","PlayArea","Input","input","Button","button","InputArea","Warning","p","UrlPicker","setValue","showWarning","endsWith","onChange","event","target","PageWrapper","Centered","Page","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e832134.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rock.ff826bd1.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.7c607c3d.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.73c012ea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lizard.2a42d61e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spock.524f1a73.png\";","import React, { createContext, useState } from 'react';\r\n\r\nconst UrlContext = createContext([]);\r\n\r\nexport const UrlContextProvider = ({ children }) => {\r\n    const [url, setUrl] = useState('https://codechallenge.boohma.com');\r\n\r\n    const value = {\r\n        setUrl,\r\n        url\r\n    };\r\n    return <UrlContext.Provider value={value}>{children}</UrlContext.Provider>;\r\n};\r\n\r\nexport default UrlContext;\r\n","import React, { createContext, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport UrlContext from './UrlContext';\r\n\r\nconst PlayContext = createContext({\r\n    computerMove: null,\r\n    onMoveSelected: () => {},\r\n    playerMove: null\r\n});\r\n\r\nexport const PlayContextProvider = ({ children }) => {\r\n    const [computerMove, setComputerMove] = useState();\r\n    const [playerMove, setPlayerMove] = useState();\r\n    const [results, setResults] = useState([]);\r\n    const { url } = useContext(UrlContext);\r\n    \r\n    const onMoveSelected = async id => {\r\n        setPlayerMove(id);\r\n        setComputerMove(null);\r\n        const response = await axios.post(`${url}/play`, {\r\n            player: id\r\n        }, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const { computer, results: result } = response.data;\r\n        \r\n        results.push(result);\r\n        if (results.length > 10) {\r\n            setResults(results.slice(1));\r\n        } else {\r\n            setResults(results);\r\n        }\r\n\r\n        setComputerMove(computer);\r\n    };\r\n\r\n    const value = {\r\n        computerMove,\r\n        onMoveSelected,\r\n        playerMove,\r\n        results\r\n    };\r\n    return <PlayContext.Provider value={value}>{children}</PlayContext.Provider>;\r\n};\r\n\r\nexport default PlayContext;\r\n","import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport UrlContext from './UrlContext';\r\n\r\nconst MovesContext = createContext([]);\r\n\r\nexport const MovesContextProvider = ({ children }) => {\r\n    const [moves, setMoves] = useState([]);\r\n    const { url } = useContext(UrlContext);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await axios.get(`${url}/choices`);\r\n            setMoves(response.data);\r\n        })();\r\n    }, []);\r\n\r\n    const value = {\r\n        moves\r\n    };\r\n    return <MovesContext.Provider value={value}>{children}</MovesContext.Provider>;\r\n};\r\n\r\nexport default MovesContext;\r\n","import React from 'react';\r\n\r\nconst Credits = () => (\r\n    <div>\r\n        <h2>Credits</h2>\r\n        Pictures taken from\r\n        <ul>\r\n            <li><a href=\"https://www.istockphoto.com/vector/friendly-green-iguana-in-flat-style-vector-gm862153016-142888289\">Lizard</a></li>\r\n            <li><a href=\"https://www.pinclipart.com/pindetail/ohwhox_star-trek-spock-fallout-star-trek-spock-fallout/\">Spock</a></li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default Credits;","import React, { useContext } from 'react';\r\nimport PlayContext from '../context/PlayContext';\r\nimport styled from 'styled-components';\r\n\r\nconst ScoreWrapper = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nconst EmphasizedText = styled.em`\r\n    color: darkgoldenrod;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst Score = () => {\r\n    const { results } = useContext(PlayContext);\r\n    const wins = results.filter(result => result === \"win\").length;\r\n    const ties = results.filter(result => result === \"tie\").length;\r\n    const losses = results.filter(result => result === \"lose\").length;\r\n    \r\n    const mostRecentResult = results.length > 0 && results[results.length - 1] || null;\r\n    return (\r\n        <ScoreWrapper>\r\n            <h2>{mostRecentResult && `You ${mostRecentResult}!`}</h2>\r\n            <p><EmphasizedText>{`${wins} wins, ${ties} ties, ${losses} losses`}</EmphasizedText></p>\r\n            <p>(10 most recent rounds)</p>\r\n        </ScoreWrapper>\r\n    );\r\n};\r\n\r\nexport default Score;","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport MovesContext from '../../context/MovesContext';\r\nimport rock from '../../images/rock.png';\r\nimport paper from '../../images/paper.png';\r\nimport scissors from '../../images/scissors.jpg';\r\nimport lizard from '../../images/lizard.jpg';\r\nimport spock from '../../images/spock.png';\r\n\r\nconst MoveButton = styled.img`\r\n    border-radius: 50px;\r\n    box-shadow: ${props => props.isSelected ? 'darkgoldenrod 0px 0px 10px 1px' : ''};\r\n    height: 10vh;\r\n    margin: 10px;\r\n    width: 10vh;\r\n\r\n    ${props => props.isClickable ? `\r\n        :hover {\r\n            box-shadow: darkgreen 0px 0px 10px 1px;\r\n            cursor: pointer;\r\n        }\r\n    ` : ''}\r\n`;\r\n\r\nconst urls = {\r\n    lizard,\r\n    paper,\r\n    rock,\r\n    scissors,\r\n    spock\r\n};\r\n\r\nconst MovePicker = ({ onSelect, selected }) => {\r\n    const { moves } = useContext(MovesContext);\r\n\r\n    return (\r\n        moves.map(({ id, name }) => <MoveButton src={urls[name]} alt={name} key={id} isSelected={selected === id} isClickable={!!onSelect} onClick={onSelect ? () => onSelect(id) : (() => {})} />)\r\n    );\r\n};\r\n\r\nexport default MovePicker;","import React, { useContext } from 'react';\r\nimport MovePicker from './MovePicker';\r\nimport PlayContext from '../../context/PlayContext';\r\n\r\nconst PlayArea = () => {\r\n    const { computerMove, onMoveSelected, playerMove } = useContext(PlayContext);\r\n    return (\r\n        <>\r\n            <div>\r\n                <h2>Your move</h2>\r\n                <MovePicker selected={playerMove} onSelect={onMoveSelected}/>\r\n            </div>\r\n            <div>\r\n                <h2>Computer's move</h2>\r\n                <MovePicker selected={computerMove} />\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PlayArea;","import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport UrlContext from '../context/UrlContext';\r\n\r\nconst sharedStyles = `\r\n    padding: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    ${sharedStyles}\r\n    border: none;\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    ${sharedStyles}\r\n    background-color: lightgray;\r\n    box-shadow: none;\r\n    border: none;\r\n    color: white;\r\n    flex-grow: 0;\r\n    font-weight: bold;\r\n    width: 75px;\r\n`;\r\n\r\nconst InputArea = styled.div`\r\n    border: 1px solid lightgray;\r\n    border-radius: 3px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 500px;\r\n    padding: 0;\r\n\r\n    @media only screen and (min-width: 300px) {\r\n        flex-direction: row;\r\n    }\r\n`;\r\n\r\nconst Warning = styled.p`\r\n    color: red;\r\n`;\r\n\r\nconst UrlPicker = () => {\r\n    const { setUrl, url } = useContext(UrlContext);\r\n    const [value, setValue] = useState(url);\r\n    const showWarning = value && value.endsWith(\"/\");\r\n    return (\r\n        <>\r\n            <h2>Game service url</h2>\r\n            <InputArea>\r\n                <Input value={value} onChange={event => setValue(event.target.value)}/>\r\n                <Button onClick={() => setUrl(value)}>Save</Button>\r\n            </InputArea>\r\n            {showWarning && <Warning>Please delete trailing slash from url</Warning>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UrlPicker;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Credits from './Credits';\r\nimport Score from './Score';\r\nimport PlayArea from './PlayArea';\r\nimport UrlPicker from './UrlPicker';\r\n\r\nconst PageWrapper = styled.div`\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Centered = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst Page = () => (\r\n    <PageWrapper>\r\n        <Centered>\r\n            <h1>Rock Paper Scissors Lizard Spock!</h1>\r\n            <p>Select your move, and see if you can beat the computer! (you probably can)</p>\r\n        </Centered>\r\n        <PlayArea />\r\n        <Score />\r\n        <UrlPicker />\r\n        <Credits />\r\n    </PageWrapper>\r\n);\r\n\r\nexport default Page;\r\n","import React from 'react';\nimport { PlayContextProvider } from '../context/PlayContext';\nimport { MovesContextProvider } from '../context/MovesContext';\nimport { UrlContextProvider } from '../context/UrlContext';\nimport Page from './Page';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UrlContextProvider>\n        <MovesContextProvider>\n          <PlayContextProvider>\n            <Page />\n          </PlayContextProvider>\n        </MovesContextProvider>\n      </UrlContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}